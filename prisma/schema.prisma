// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole{
  Admin
  User
}
model User {
  id       String @id @default(cuid())
  name     String
  email    String?  @unique
  emailVerified  DateTime?
  image    String?
  password String?
  accounts Account[]
  role     UserRole @default(User)
  isTwoAutenticationEnabled Boolean @default(false)
  twoAuthentication TwoAuthenticationConfirmation?
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model ConfirmationToken {
  id                String @id @default(cuid())
  token             String @unique
  expires           DateTime
  email             String

  @@unique([email,token])
}
model ResetPasswordToken {
  id                String @id @default(cuid())
  token             String @unique
  expires           DateTime
  email             String

  @@unique([email,token])
}
model TwoAuthenticatinToken  {
  id                String @id @default(cuid())
  token             String @unique
  expires           DateTime
  email             String

  @@unique([email,token])
}

model TwoAuthenticationConfirmation {
id        String @id @default(cuid())
userId    String
user      User @relation(fields:[userId],references:[id],onDelete:Cascade)
@@unique([userId])
}